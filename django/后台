#创建一个管理员用户
python manage.py createsuperuser

#向admin注册booktest的模型
打开booktest/admin.py文件，注册模型

from django.contrib import admin
from models import BookInfo
admin.site.register(BookInfo)

问题：如果在str方法中返回中文，在修改和添加时会报ascii的错误
解决：在str()方法中，将字符串末尾添加“.encode('utf-8')”

#自定义管理页面
Django提供了admin.ModelAdmin类
通过定义ModelAdmin的子类，来定义模型在Admin界面的显示方式

class QuestionAdmin(admin.ModelAdmin):
    ...
admin.site.register(Question, QuestionAdmin)
列表页属性
list_display：显示字段，可以点击列头进行排序

list_display = ['pk', 'btitle', 'bpub_date']

list_filter：过滤字段，过滤框会出现在右侧

list_filter = ['btitle']

search_fields：搜索字段，搜索框会出现在上侧

search_fields = ['btitle']

list_per_page：分页，分页框会出现在下侧

list_per_page = 10
添加、修改页属性

fields：属性的先后顺序

fields = ['bpub_date', 'btitle']

fieldsets：属性分组

fieldsets = [
    ('basic',{'fields': ['btitle']}),
    ('more', {'fields': ['bpub_date']}),
]


#关联注册
关联对象

    对于HeroInfo模型类，有两种注册方式
        方式一：与BookInfo模型类相同
        方式二：关联注册

    按照BookInfor的注册方式完成HeroInfo的注册
    接下来实现关联注册

from django.contrib import admin
from models import BookInfo,HeroInfo

class HeroInfoInline(admin.StackedInline):
    model = HeroInfo
    extra = 2

class BookInfoAdmin(admin.ModelAdmin):
    inlines = [HeroInfoInline]

admin.site.register(BookInfo, BookInfoAdmin)

    可以将内嵌的方式改为表格

class HeroInfoInline(admin.TabularInline)









